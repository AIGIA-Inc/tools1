<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>AIG Report</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
</head>
<body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
        crossorigin="anonymous"></script>


<div id="app" class="container-fluid" style="padding:0; height:100%">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand">AIG Report</a>


            <button type="button" class="btn btn-primary" v-on:click="get">get</button>
            <button type="button" class="btn btn-primary" v-on:click="check">check</button>
            <button type="button" class="btn btn-primary" v-on:click="refresh">refresh</button>
            <!-- <button type="button" class="btn btn-primary" v-on:click="display">display</button> -->

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <li class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <!--
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/">Graph</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/accounts">Accounts</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/totallings">Totalling</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/guest">Guests</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/shots">Shots</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/studios">Studios</a>
					</li>

						<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink0" role="button"
						   data-bs-toggle="dropdown" aria-expanded="false">
							Download...
						</a>
						<ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink0">
							<li><a class="dropdown-item" href="{{path}}/download/tree?root={{rootuser}}">tree</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/accounts">accounts</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/guest?root={{rootuser}}">guests</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/validation?root={{rootuser}}">validation</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/graph?root={{rootuser}}">graph</a></li>
                            <li><a class="dropdown-item" href="{{path}}/download/shots">shots</a></li>
						</ul>
					</li>  -->

                    <li class="nav-item dropdown" v-if="access_token !== ''">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink1" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            Layout...
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink1">
                            <li><a class="dropdown-item" href="{{ path }}/draw?layout=circo">cicle</a></li>
                            <li><a class="dropdown-item" href="{{ path }}/draw?layout=dot">tree</a></li>
                            <li><a class="dropdown-item" href="{{ path }}/draw?layout=fdp">fdp</a></li>
                            <li><a class="dropdown-item" href="{{ path }}/draw?layout=neato">neato</a></li>
                            <li><a class="dropdown-item" href="{{ path }}/draw?layout=sfdp">sfdp</a></li>
                            <li><a class="dropdown-item" href="{{ path }}/draw?layout=twopi">twopi</a></li>
                        </ul>
                    </li>
                    <li>
                        <button type="button" class="btn btn-primary" v-on:click="logout">Logout</button>
                    </li>
                    <li>
                        <span class="btn btn-primary">[[message]]</span>
                    </li>
                </ul>
            </li>
        </div>
    </nav>
    <div class="container">
        <div class="row">
            <div v-if="!access_token" class="d-flex align-items-center">
                <div>
                    <form style="margin:0 auto;margin-top:100px;">
                        <div class="row">
                            <div style="margin:0 auto">
                                <div class="col">
                                    <div class="input-group">
                                        <input type="text" v-model="username" maxlength="20" name="username"
                                               class="form-control" placeholder="Username" aria-label="Username"
                                               aria-describedby="basic-addon1">
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="input-group">
                                    <input type="text" v-model="password" maxlength="20" 　name="password"
                                           class="form-control" placeholder="Password" aria-label="Password"
                                           aria-describedby="basic-addon1">
                                </div>
                            </div>
                            <button type="button" class="btn btn-primary" v-on:click="login">Login</button>
                        </div>
                    </form>
                </div>
            </div>
            <div v-if="access_token" class="row" style="margin:20px;padding:20px">
                <div class="col-1"></div>
                <div class="col">
                    <table class="table">
                        <thead>
                        <tr>
                            <th v-on:click="name" scope="col" style="cursor: pointer">↕メールアドレス</th>
                            <th v-on:click="nickname" scope="col" style="cursor: pointer">↕スタジオ名</th>
                            <th v-on:click="valid_count" scope="col" style="cursor: pointer">↕支払い</th>
                            <th v-on:click="all_count" scope="col" style="cursor: pointer">↕トータル</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr v-for="studio in items">
                            <td>[[studio.name]]</td>
                            <td>[[studio.nickname]]</td>
                            <td v-if="file_exist == 1">[[studio.valid_count]]</td>
                            <td v-else>-</td>
                            <td>[[studio.all_count]]</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
                <div class="col-1">
                </div>
            </div>
        </div>
    </div>
    {% block body %}
    {% endblock %}
</div>
{% block trailing %}
{% endblock %}

<script>
    new Vue({
        el: "#app",
        delimiters: ["[[", "]]"],
        data: () => {
            return {
                username: "",
                password: "",
                items: [],
                message: "",
                access_token: "",
                refresh_token: "",
                sort_order: "True",
                file_exist: 0
            }
        },
        methods: {
            login: function () {
                axios.post('/token', {
                    username: this.username,
                    password: this.password
                }, {headers: {accept: "application/json", "Content-Type": "application/x-www-form-urlencoded"}})
                    .then((response) => {
                        if (response.status === 200) {
                            this.access_token = response.data.access_token;
                            this.refresh_token = response.data.refresh_token;
                            localStorage.setItem('access_token', this.access_token);
                            localStorage.setItem('refresh_token', this.refresh_token);
                            this.get();
                        } else {
                            this.access_token = "";
                            localStorage.setItem('access_token', "");
                            this.message = response.data.message;
                        }
                    }).catch((e) => {
                    console.log(e.message);
                })
            },
            refresh: function (callback) {
                this.refresh_token = localStorage.getItem("refresh_token");
                if (this.refresh_token) {
                    axios.get('/refresh', {
                        headers: {
                            accept: "application/json",
                            Authorization: "Bearer " + this.refresh_token
                        }
                    }).then((response) => {
                        if (response.status === 200) {
                            this.access_token = response.data.access_token;
                            this.refresh_token = response.data.refresh_token;
                            localStorage.setItem('access_token', this.access_token);
                            localStorage.setItem('refresh_token', this.refresh_token);
                            this.nickname()
                            if (callback) {callback()};
                        } else {
                            this.access_token = "";
                            localStorage.setItem('access_token', "");
                            this.message = response.data.message;
                        }
                    }).catch((e) => {
                        console.log(e.message);
                    })
                }
            },
            logout: function () {
                this.access_token = "";
                localStorage.removeItem("access_token");
            },
            upload: function () {
                axios.post('/upload')
                    .then((response) => {
                        if (response.data.code === 0) {
                        } else {
                        }
                    }).catch((e) => {

                })
            },
            check: function () {
                axios.get('/file_exist')
                    .then((response) => {
                        if (response.data.code === 1) {
                            this.file_exist = 1;
                            this.get();
                        }
                    }).catch((e) => {

                })
            },
            get: function () {
                this.access_token = localStorage.getItem("access_token");
                if (this.access_token) {
                    axios.get('/api/studios/name/True', {
                        headers: {
                            accept: "application/json",
                            Authorization: "Bearer " + this.access_token
                        }
                    }).then((response) => {
                        this.items = response.data.studios;
                        this.message = response.data.message;
                    }).catch((e) => {

                    })
                }
            },
            name: async function () {
                 axios.get('/api/studios/name/' + this.sort_order,{
                        headers: {
                            accept: "application/json",
                            Authorization: "Bearer " + this.access_token
                        }
                    })
                    .then((response)  => {
                        if (this.sort_order === "True") {
                            this.sort_order = "False"
                        } else {
                            this.sort_order = "True"
                        }
                        this.items = response.data.studios;
                    }).catch((e) => {
                })
            },
            nickname: function () {
                axios.get('/api/studios/nickname/' + this.sort_order,{
                        headers: {
                            accept: "application/json",
                            Authorization: "Bearer " + this.access_token
                        }
                    })
                    .then((response) => {
                        if (this.sort_order === "True") {
                            this.sort_order = "False"
                        } else {
                            this.sort_order = "True"
                        }
                        this.items = response.data.studios;
                    }).catch((e) => {
                })
            },
            valid_count: function () {
                axios.get('/api/studios/valid_count/' + this.sort_order,{
                        headers: {
                            accept: "application/json",
                            Authorization: "Bearer " + this.access_token
                        }
                    })
                    .then((response) => {
                        if (this.sort_order === "True") {
                            this.sort_order = "False"
                        } else {
                            this.sort_order = "True"
                        }
                        this.items = response.data.studios;
                    }).catch((e) => {

                })
            },
            all_count: function () {
                axios.get('/api/studios/all_count/' + this.sort_order,{
                        headers: {
                            accept: "application/json",
                            Authorization: "Bearer " + this.access_token
                        }
                    })
                    .then((response) => {
                        if (this.sort_order === "True") {
                            this.sort_order = "False"
                        } else {
                            this.sort_order = "True"
                        }
                        this.items = response.data.studios;
                    }).catch((e) => {

                })
            },
        },
        mounted() {
            this.check();
        }
    })
</script>
</body>
</html>