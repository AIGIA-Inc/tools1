<!DOCTYPE html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>AIG Report</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
		  integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
	<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
</head>
<body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
		crossorigin="anonymous"></script>
<div id="app" class="container-fluid" style="padding:0">
	<nav class="navbar navbar-expand-lg navbar-dark bg-primary">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">AIG Report  </a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
					aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<li class="collapse navbar-collapse" id="navbarNav">
				<ul class="navbar-nav">
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/">Graph</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/accounts">Accounts</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/totallings">Totalling</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/guest">Guests</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/shots">Shots</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="{{path}}/studios">Studios</a>
					</li>

					<!--	<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink0" role="button"
						   data-bs-toggle="dropdown" aria-expanded="false">
							Download...
						</a>
						<ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink0">
							<li><a class="dropdown-item" href="{{path}}/download/tree?root={{rootuser}}">tree</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/accounts">accounts</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/guest?root={{rootuser}}">guests</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/validation?root={{rootuser}}">validation</a></li>
							<li><a class="dropdown-item" href="{{path}}/download/graph?root={{rootuser}}">graph</a></li>
                            <li><a class="dropdown-item" href="{{path}}/download/shots">shots</a></li>
						</ul>
					</li>  -->
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink1" role="button"
						   data-bs-toggle="dropdown" aria-expanded="false">
							Layout...
						</a>
						<ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink1">
							<li><a class="dropdown-item" href="{{path}}/hoge?layout=circo">cicle</a></li>
							<li><a class="dropdown-item" href="{{path}}/hoge?layout=dot">tree</a></li>
							<li><a class="dropdown-item" href="{{path}}/hoge?layout=fdp">fdp</a></li>
							<li><a class="dropdown-item" href="{{path}}/hoge?layout=neato">neato</a></li>
							<li><a class="dropdown-item" href="{{path}}/hoge?layout=sfdp">sfdp</a></li>
							<li><a class="dropdown-item" href="{{path}}/hoge?layout=twopi">twopi</a></li>
						</ul>
					</li>
					<li>
					    <button type="button" class="btn btn-primary" v-on:click="logout">Logout</button>
					</li>
				</ul>
			</li>
		</div>
	</nav>
	{% block body %}
	{% endblock %}
</div>
{% block trailing %}
{% endblock %}
	<script>


	new Vue({
		el: "#app",
		delimiters: ["[[", "]]"],
		data: () => {
			return {
				username:"",
				password:"",
                sort_order: "True",
				items: []
			}
		},
		methods: {
			login: function () {
                axios.post('/login', {username:this.username, password:this.password})
                    .then((response) => {
                       if (response.data.code === 0) {
                         window.location.href = '/main';
                       } else {
                       }
                    }).catch((e) => {

                })
            },
            logout: function () {
                axios.post('/logout')
                    .then((response) => {
                     if (response.data.code === 0) {
                       window.location.href = '/';
                       } else {
                       }
                    }).catch((e) => {

                })
            },
            get: function () {
                axios.get('/api/studios/name/True')
                    .then((response) => {
                        this.items = response.data;
                    }).catch((e) => {
                    console.log(e);
                })
            },













            name: function () {
                axios.get('/api/studios/name/' + this.sort_order)
                    .then((response) => {
                     if (this.sort_order === "True") { this.sort_order = "False" } else {  this.sort_order = "True" };
                        this.items = response.data;
                    }).catch((e) => {
                    console.log(e);
                })
            },
			nickname: function () {
                axios.get('/api/studios/nickname/' + this.sort_order)
                    .then((response) => {
                        if (this.sort_order === "True") { this.sort_order = "False" } else {  this.sort_order = "True" };
                        this.items = response.data;
                    }).catch((e) => {
                    console.log(e);
                })
            },
			valid_count: function () {
                axios.get('/api/studios/valid_count/' + this.sort_order)
                    .then((response) => {
                        if (this.sort_order === "True") { this.sort_order = "False" } else {  this.sort_order = "True" };
                        this.items = response.data;
                    }).catch((e) => {
                    console.log(e);
                })
            },
			all_count: function () {
                axios.get('/api/studios/all_count/' + this.sort_order)
                    .then((response) => {
                        if (this.sort_order === "True") { this.sort_order = "False" } else {  this.sort_order = "True" };
                        this.items = response.data;
                    }).catch((e) => {
                    console.log(e);
                })
            },
		},
		mounted() {
            this.get();
		}
	})
</script>
</body>
</html>
